/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as SutraIndexImport } from './routes/sutra/index'
import { Route as CalendarIndexImport } from './routes/calendar/index'
import { Route as BookIndexImport } from './routes/book/index'
import { Route as SutraCategoryImport } from './routes/sutra/$category'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SutraIndexRoute = SutraIndexImport.update({
  id: '/sutra/',
  path: '/sutra/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarIndexRoute = CalendarIndexImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRoute,
} as any)

const BookIndexRoute = BookIndexImport.update({
  id: '/book/',
  path: '/book/',
  getParentRoute: () => rootRoute,
} as any)

const SutraCategoryRoute = SutraCategoryImport.update({
  id: '/sutra/$category',
  path: '/sutra/$category',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/sutra/$category': {
      id: '/sutra/$category'
      path: '/sutra/$category'
      fullPath: '/sutra/$category'
      preLoaderRoute: typeof SutraCategoryImport
      parentRoute: typeof rootRoute
    }
    '/book/': {
      id: '/book/'
      path: '/book'
      fullPath: '/book'
      preLoaderRoute: typeof BookIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexImport
      parentRoute: typeof rootRoute
    }
    '/sutra/': {
      id: '/sutra/'
      path: '/sutra'
      fullPath: '/sutra'
      preLoaderRoute: typeof SutraIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryRoute
  '/book': typeof BookIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/sutra': typeof SutraIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryRoute
  '/book': typeof BookIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/sutra': typeof SutraIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryRoute
  '/book/': typeof BookIndexRoute
  '/calendar/': typeof CalendarIndexRoute
  '/sutra/': typeof SutraIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/sutra/$category'
    | '/book'
    | '/calendar'
    | '/sutra'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/sutra/$category' | '/book' | '/calendar' | '/sutra'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/sutra/$category'
    | '/book/'
    | '/calendar/'
    | '/sutra/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  SutraCategoryRoute: typeof SutraCategoryRoute
  BookIndexRoute: typeof BookIndexRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  SutraIndexRoute: typeof SutraIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  SutraCategoryRoute: SutraCategoryRoute,
  BookIndexRoute: BookIndexRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  SutraIndexRoute: SutraIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/sutra/$category",
        "/book/",
        "/calendar/",
        "/sutra/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/sutra/$category": {
      "filePath": "sutra/$category.tsx"
    },
    "/book/": {
      "filePath": "book/index.tsx"
    },
    "/calendar/": {
      "filePath": "calendar/index.tsx"
    },
    "/sutra/": {
      "filePath": "sutra/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
