/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as VideoIndexImport } from './routes/video/index'
import { Route as DhammaIndexImport } from './routes/dhamma/index'
import { Route as CalendarIndexImport } from './routes/calendar/index'
import { Route as BookIndexImport } from './routes/book/index'
import { Route as VideoViewIdImport } from './routes/video/view.$id'
import { Route as BookViewIdImport } from './routes/book/view.$id'

// Create Virtual Routes

const SutraIndexLazyImport = createFileRoute('/sutra/')()
const FavoritesIndexLazyImport = createFileRoute('/favorites/')()
const SutraSearchLazyImport = createFileRoute('/sutra/search')()
const SutraCategoryLazyImport = createFileRoute('/sutra/$category')()
const SutraDetailsIdLazyImport = createFileRoute('/sutra/details/$id')()
const FavoritesDetailsIdLazyImport = createFileRoute('/favorites/details/$id')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SutraIndexLazyRoute = SutraIndexLazyImport.update({
  id: '/sutra/',
  path: '/sutra/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sutra/index.lazy').then((d) => d.Route))

const FavoritesIndexLazyRoute = FavoritesIndexLazyImport.update({
  id: '/favorites/',
  path: '/favorites/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/favorites/index.lazy').then((d) => d.Route),
)

const VideoIndexRoute = VideoIndexImport.update({
  id: '/video/',
  path: '/video/',
  getParentRoute: () => rootRoute,
} as any)

const DhammaIndexRoute = DhammaIndexImport.update({
  id: '/dhamma/',
  path: '/dhamma/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarIndexRoute = CalendarIndexImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRoute,
} as any)

const BookIndexRoute = BookIndexImport.update({
  id: '/book/',
  path: '/book/',
  getParentRoute: () => rootRoute,
} as any)

const SutraSearchLazyRoute = SutraSearchLazyImport.update({
  id: '/sutra/search',
  path: '/sutra/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sutra/search.lazy').then((d) => d.Route))

const SutraCategoryLazyRoute = SutraCategoryLazyImport.update({
  id: '/sutra/$category',
  path: '/sutra/$category',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/sutra/$category.lazy').then((d) => d.Route),
)

const SutraDetailsIdLazyRoute = SutraDetailsIdLazyImport.update({
  id: '/sutra/details/$id',
  path: '/sutra/details/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/sutra/details.$id.lazy').then((d) => d.Route),
)

const FavoritesDetailsIdLazyRoute = FavoritesDetailsIdLazyImport.update({
  id: '/favorites/details/$id',
  path: '/favorites/details/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/favorites/details.$id.lazy').then((d) => d.Route),
)

const VideoViewIdRoute = VideoViewIdImport.update({
  id: '/video/view/$id',
  path: '/video/view/$id',
  getParentRoute: () => rootRoute,
} as any)

const BookViewIdRoute = BookViewIdImport.update({
  id: '/book/view/$id',
  path: '/book/view/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/sutra/$category': {
      id: '/sutra/$category'
      path: '/sutra/$category'
      fullPath: '/sutra/$category'
      preLoaderRoute: typeof SutraCategoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/sutra/search': {
      id: '/sutra/search'
      path: '/sutra/search'
      fullPath: '/sutra/search'
      preLoaderRoute: typeof SutraSearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/book/': {
      id: '/book/'
      path: '/book'
      fullPath: '/book'
      preLoaderRoute: typeof BookIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexImport
      parentRoute: typeof rootRoute
    }
    '/dhamma/': {
      id: '/dhamma/'
      path: '/dhamma'
      fullPath: '/dhamma'
      preLoaderRoute: typeof DhammaIndexImport
      parentRoute: typeof rootRoute
    }
    '/video/': {
      id: '/video/'
      path: '/video'
      fullPath: '/video'
      preLoaderRoute: typeof VideoIndexImport
      parentRoute: typeof rootRoute
    }
    '/favorites/': {
      id: '/favorites/'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sutra/': {
      id: '/sutra/'
      path: '/sutra'
      fullPath: '/sutra'
      preLoaderRoute: typeof SutraIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/book/view/$id': {
      id: '/book/view/$id'
      path: '/book/view/$id'
      fullPath: '/book/view/$id'
      preLoaderRoute: typeof BookViewIdImport
      parentRoute: typeof rootRoute
    }
    '/video/view/$id': {
      id: '/video/view/$id'
      path: '/video/view/$id'
      fullPath: '/video/view/$id'
      preLoaderRoute: typeof VideoViewIdImport
      parentRoute: typeof rootRoute
    }
    '/favorites/details/$id': {
      id: '/favorites/details/$id'
      path: '/favorites/details/$id'
      fullPath: '/favorites/details/$id'
      preLoaderRoute: typeof FavoritesDetailsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/sutra/details/$id': {
      id: '/sutra/details/$id'
      path: '/sutra/details/$id'
      fullPath: '/sutra/details/$id'
      preLoaderRoute: typeof SutraDetailsIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryLazyRoute
  '/sutra/search': typeof SutraSearchLazyRoute
  '/book': typeof BookIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/dhamma': typeof DhammaIndexRoute
  '/video': typeof VideoIndexRoute
  '/favorites': typeof FavoritesIndexLazyRoute
  '/sutra': typeof SutraIndexLazyRoute
  '/book/view/$id': typeof BookViewIdRoute
  '/video/view/$id': typeof VideoViewIdRoute
  '/favorites/details/$id': typeof FavoritesDetailsIdLazyRoute
  '/sutra/details/$id': typeof SutraDetailsIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryLazyRoute
  '/sutra/search': typeof SutraSearchLazyRoute
  '/book': typeof BookIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/dhamma': typeof DhammaIndexRoute
  '/video': typeof VideoIndexRoute
  '/favorites': typeof FavoritesIndexLazyRoute
  '/sutra': typeof SutraIndexLazyRoute
  '/book/view/$id': typeof BookViewIdRoute
  '/video/view/$id': typeof VideoViewIdRoute
  '/favorites/details/$id': typeof FavoritesDetailsIdLazyRoute
  '/sutra/details/$id': typeof SutraDetailsIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sutra/$category': typeof SutraCategoryLazyRoute
  '/sutra/search': typeof SutraSearchLazyRoute
  '/book/': typeof BookIndexRoute
  '/calendar/': typeof CalendarIndexRoute
  '/dhamma/': typeof DhammaIndexRoute
  '/video/': typeof VideoIndexRoute
  '/favorites/': typeof FavoritesIndexLazyRoute
  '/sutra/': typeof SutraIndexLazyRoute
  '/book/view/$id': typeof BookViewIdRoute
  '/video/view/$id': typeof VideoViewIdRoute
  '/favorites/details/$id': typeof FavoritesDetailsIdLazyRoute
  '/sutra/details/$id': typeof SutraDetailsIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/sutra/$category'
    | '/sutra/search'
    | '/book'
    | '/calendar'
    | '/dhamma'
    | '/video'
    | '/favorites'
    | '/sutra'
    | '/book/view/$id'
    | '/video/view/$id'
    | '/favorites/details/$id'
    | '/sutra/details/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/sutra/$category'
    | '/sutra/search'
    | '/book'
    | '/calendar'
    | '/dhamma'
    | '/video'
    | '/favorites'
    | '/sutra'
    | '/book/view/$id'
    | '/video/view/$id'
    | '/favorites/details/$id'
    | '/sutra/details/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/sutra/$category'
    | '/sutra/search'
    | '/book/'
    | '/calendar/'
    | '/dhamma/'
    | '/video/'
    | '/favorites/'
    | '/sutra/'
    | '/book/view/$id'
    | '/video/view/$id'
    | '/favorites/details/$id'
    | '/sutra/details/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  SutraCategoryLazyRoute: typeof SutraCategoryLazyRoute
  SutraSearchLazyRoute: typeof SutraSearchLazyRoute
  BookIndexRoute: typeof BookIndexRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  DhammaIndexRoute: typeof DhammaIndexRoute
  VideoIndexRoute: typeof VideoIndexRoute
  FavoritesIndexLazyRoute: typeof FavoritesIndexLazyRoute
  SutraIndexLazyRoute: typeof SutraIndexLazyRoute
  BookViewIdRoute: typeof BookViewIdRoute
  VideoViewIdRoute: typeof VideoViewIdRoute
  FavoritesDetailsIdLazyRoute: typeof FavoritesDetailsIdLazyRoute
  SutraDetailsIdLazyRoute: typeof SutraDetailsIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  SutraCategoryLazyRoute: SutraCategoryLazyRoute,
  SutraSearchLazyRoute: SutraSearchLazyRoute,
  BookIndexRoute: BookIndexRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  DhammaIndexRoute: DhammaIndexRoute,
  VideoIndexRoute: VideoIndexRoute,
  FavoritesIndexLazyRoute: FavoritesIndexLazyRoute,
  SutraIndexLazyRoute: SutraIndexLazyRoute,
  BookViewIdRoute: BookViewIdRoute,
  VideoViewIdRoute: VideoViewIdRoute,
  FavoritesDetailsIdLazyRoute: FavoritesDetailsIdLazyRoute,
  SutraDetailsIdLazyRoute: SutraDetailsIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/sutra/$category",
        "/sutra/search",
        "/book/",
        "/calendar/",
        "/dhamma/",
        "/video/",
        "/favorites/",
        "/sutra/",
        "/book/view/$id",
        "/video/view/$id",
        "/favorites/details/$id",
        "/sutra/details/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/sutra/$category": {
      "filePath": "sutra/$category.lazy.tsx"
    },
    "/sutra/search": {
      "filePath": "sutra/search.lazy.tsx"
    },
    "/book/": {
      "filePath": "book/index.tsx"
    },
    "/calendar/": {
      "filePath": "calendar/index.tsx"
    },
    "/dhamma/": {
      "filePath": "dhamma/index.tsx"
    },
    "/video/": {
      "filePath": "video/index.tsx"
    },
    "/favorites/": {
      "filePath": "favorites/index.lazy.tsx"
    },
    "/sutra/": {
      "filePath": "sutra/index.lazy.tsx"
    },
    "/book/view/$id": {
      "filePath": "book/view.$id.tsx"
    },
    "/video/view/$id": {
      "filePath": "video/view.$id.tsx"
    },
    "/favorites/details/$id": {
      "filePath": "favorites/details.$id.lazy.tsx"
    },
    "/sutra/details/$id": {
      "filePath": "sutra/details.$id.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
